class Solution{
    //Function to add two numbers represented by linked list.
    static Node reverse(Node head){
        Node prev = null;
        Node curr = head;
        Node nex = null;
        while(curr!=null){
            nex = curr.next;
            curr.next = prev;
            prev = curr;
            curr=nex;
        }
        return prev;
    }
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        Node L1 = reverse(first);
        Node L2 = reverse(second);
        Node temp = new Node(0);
        Node temp2 = temp;
        
        int carry = 0;
        int sum = 0;
        while(L1!=null || L2!=null || carry==1){
            sum=0;
            if(L1!=null){
                sum+=L1.data;
                L1=L1.next;
            }
            if(L2!=null){
                sum+=L2.data;
                L2=L2.next;
            }
            sum+=carry;
            carry=sum/10;
            Node n = new Node(sum%10);
            temp2.next=n;
            temp2=temp2.next;
        }
        Node ans=reverse(temp.next);
    return ans;
        
    }
}